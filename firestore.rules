rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // users collection
    match /users/{userId} {
      // Anyone authenticated can read their own profile
      allow read: if request.auth != null && request.auth.uid == userId;

      // Allow users to create their own profile
      allow create: if request.auth != null && request.auth.uid == userId;

      // Allow updates to only certain safe fields from client (not points or lastAdShown)
      allow update: if request.auth != null
        && request.auth.uid == userId
        && request.resource.data.keys().hasOnly([
          "name",
          "email",
          "photoURL",
          "note",
          "partnerCode"
        ]);

      // Prevent clients from writing sensitive fields (server-only fields)
      allow write: if false;
    }

    // couples: allow read for everyone, create only if authenticated
    match /couples/{docId} {
      allow read: if true;
      allow create: if request.auth != null;
      // updates/deletes should be handled by trusted server / Cloud Functions
      allow update, delete: if false;
    }

    // activities: allow server and user writes only via server or security rules later
    match /users/{userId}/activities/{actId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow create: if false;  // created via Cloud Functions (server)
      allow update, delete: if false;
    }

    // fallback
    match /{document=**} {
      allow read: if true;
      allow write: if false;
    }
  }
}
